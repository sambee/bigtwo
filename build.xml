<!-- build configuration -->
<project name="bigtwo" default="compile" basedir=".">

  <property name="app.name" value="bigtwo"/>
  <property name="src.dir" value="src/main"/>
  <property name="deploy.dir" value="dist"/>
  <property name="version" value="UNKNOWN"/>

  <!-- declare our classpath -->
  <path id="classpath">
    <fileset dir="../lib" includes="**/*.jar"/>
    <pathelement location="${deploy.dir}/classes"/>
  </path>

  <!-- generates additional methods for distributed object classes -->
  <target name="gendobj" depends="prepare">
    <taskdef name="dobj"
             classname="com.threerings.presents.tools.GenDObjectTask"
             classpathref="classpath"/>
    <!-- make sure the dobject class files are all compiled -->
    <javac srcdir="${src.dir}" destdir="${deploy.dir}/classes"
           debug="on" optimize="${build.optimize}" deprecation="on">
      <classpath refid="classpath"/>
      <include name="**/*Object.java"/>
    </javac>
    <!-- now generate the associated files -->
    <dobj classpathref="classpath">
      <fileset dir="${src.dir}" includes="**/*Object.java"/>
    </dobj>
  </target>

  <!-- prepares the application directories -->
  <target name="prepare">
    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${deploy.dir}/classes"/>
    <mkdir dir="${deploy.dir}/classes/rsrc"/>
    <copy todir="${deploy.dir}/classes/rsrc">
      <fileset dir="rsrc" includes="**/*"/>
    </copy>
  </target>

  <!-- cleans out the installed application -->
  <target name="clean">
    <delete dir="${deploy.dir}"/>
  </target>

  <!-- build the java class files -->
  <target name="compile" depends="prepare">
    <javac srcdir="${src.dir}" destdir="${deploy.dir}/classes"
           debug="on" optimize="off" deprecation="on">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <!-- a target for rebuilding everything -->
  <target name="all" depends="clean,prepare,compile,dist"/>

  <!-- builds our distribution files (war and jar) -->
  <target name="dist" depends="prepare,compile">
    <!-- make sure not to include this file from test server runs -->
    <delete file="${deploy.dir}/classes/toybox.properties"/>
    <jar file="${deploy.dir}/${app.name}.jar"
         basedir="${deploy.dir}/classes"/>
  </target>

  <!-- a target for running a game client -->
  <target name="client" depends="compile">
    <fail unless="username">
      Please specify a username: ant -Dusername=who client
    </fail>
    <java classname="com.threerings.toybox.client.ToyBoxApp" fork="true">
      <classpath>
        <pathelement location="${deploy.dir}/classes"/>
        <pathelement location="../client/gg-client.jar"/>
      </classpath>
      <sysproperty key="no_log_redir" value="true"/>
      <arg value="localhost"/>
      <arg value="47624"/>
      <arg value="${username}"/>
      <arg value="secret"/>
    </java>
  </target>

  <!-- a target for running the game server -->
  <target name="server" depends="dist">
    <propertyfile file="${deploy.dir}/classes/toybox.properties">
      <entry key="resource_dir" value="dist"/>
      <entry key="resource_url" value="file://dist"/>
    </propertyfile>
    <java classname="com.threerings.toybox.server.ToyBoxServer" fork="true">
      <jvmarg value="-Dgame_conf=${app.name}.xml"/>
      <classpath refid="classpath"/>
    </java>
    <delete file="${deploy.dir}/classes/toybox.properties"/>
  </target>

  <!-- a target for running the board view test -->
  <target name="viewtest" depends="compile">
    <java classname="com.sixlegs.bigtwo.BigTwoBoardViewTest" fork="true">
      <classpath>
        <pathelement location="${deploy.dir}/classes"/>
        <pathelement location="../client/gg-client.jar"/>
      </classpath>
    </java>
  </target>

  <target name="dist-src" depends="dist" description="Create source distribution">
    <zip destfile="dist/${app.name}-src-${version}.zip">
      <zipfileset dir="src" prefix="${app.name}-${version}/src"/>
      <zipfileset dir="rsrc" prefix="${app.name}-${version}/rsrc"/>
      <zipfileset dir="." includes="build.xml,COPYING" prefix="${app.name}-${version}"/>
    </zip>
  </target>
</project>
